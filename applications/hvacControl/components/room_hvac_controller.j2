{% macro room_hvac_controller(id, title=None, room_icon=None, initial_temperature='25.0', initial_power='false', event_condition=None, rotary_sensor_id=None, click_binary_sensor_id=None, macros=None) %}

{% set auto = {
  'binary_sensor': [
    {
      'id': click_binary_sensor_id,
      'on_click': [
        {
          'if': {
            'condition': {
              'lambda': 'return ' ~ event_condition ~ ';'
            },
            'then': {
              'script.execute': id ~ '_toggle_power'
            }
          } if event_condition else {
            'script.execute': id ~ '_toggle_power'
          },
        }
      ]
    } if click_binary_sensor_id
  ],
  'globals': [
    {    
      'id': id ~ '_power',
      'type': 'bool',
      'initial_value': initial_power
    }
  ],
  'script': [
    {
      'id': id ~ '_toggle_power',
      'then': [
        {
          'if': {
            'condition': {
              'lambda': 'return id(' ~ id ~ '_power) == true;'
            },
            'then': [
              { 'logger.log': 'Powering off ' ~ id },
              {
                'globals.set': {
                  'id': id ~ '_power',
                  'value': 'false'
                }
              },
            ],
            'else': [
              { 'logger.log': 'Powering on ' ~ id },
              {
                'globals.set': {
                  'id': id ~ '_power',
                  'value': 'true'
                }
              },
            ]
          }
        },
        { 'delay': '20ms' },
        {
          'script.execute': {
            'id': id ~ '_temperature_meter_toggle_power',
            'value': '!lambda return id(' ~ id ~ '_power);'
          }
        },
        {
          'script.execute': {
            'id': id ~ '_header_toggle_power',
            'value': '!lambda return id(' ~ id ~ '_power);'
          }
        },
        {
          'script.execute': {
            'id': id ~ '_mode_set_enabled',
            'value': '!lambda return id(' ~ id ~ '_power);'
          }
        },
        {
          'script.execute': {
            'id': id ~ '_fan_set_enabled',
            'value': '!lambda return id(' ~ id ~ '_power);'
          }
        }
      ]
    },
  ],
  'font': [
    {
      'file': "gfonts://Material+Symbols+Outlined",
      'id': id ~ '_icons_48',
      'size': 48,
      'glyphs': [
        "\U0000e8ac",
        "\U0000f168",
        "\U0000f16a",
        "\U0000f166",
        "\U0000f69b"
      ]
    }
  ]
} %}

{% set POWER_SETTINGS_ICON="\ue8ac" %}
{% set MODE_FAN_ICON="\uf168" %}
{% set MODE_HEAT_ICON="\uf16a" %}
{% set MODE_COOL_ICON="\uf166" %}
{% set ARROW_RANGE_ICON="\uf69b" %}

{% do register_component(id=id, auto_collected=auto) %}
obj:
  width: 100%
  height: 100%
  bg_color: Black
  widgets:
    - {{ macros.temperature_meter(id ~ "_temperature_meter", initial_value=initial_temperature, initial_power=initial_power, rotary_sensor_id=rotary_sensor_id, event_condition=event_condition) | indent(6) }}
    - {{ macros.room_header(id ~ "_header", text=title, icon=room_icon, initial_power=initial_power) | indent(6) }}
    - {{ macros.touch_button(id ~ "_mode", enabled=initial_power, icon=MODE_COOL_ICON, icon_font=id ~ '_icons_48') | indent(6) }}
        x: -60
        y: 140
    - {{ macros.touch_button(id ~ "_fan", enabled=initial_power, icon=MODE_FAN_ICON, icon_font=id ~ '_icons_48') | indent(6) }}
        x: 60
        y: 140
{% endmacro %}